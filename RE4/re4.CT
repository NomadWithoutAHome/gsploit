<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>123</ID>
      <Description>"created by Ash — twitter@dstdrk — discord@DRKDST#0001"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"≡ re4.exe @ 1.0.0 (mercenaries)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
desc:   Get pointers
author: DRKDST
game:   re4.exe
}

[enable]
{$asm}
luaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))

{$lua}
if syntaxcheck then return end

function resolveAddress64(a)
    return a + readInteger(a) + 4
end

autoAssemble([[
aobScanModule(pPesetasAob,re4.exe,?? ?? ?? ?? 48 ?? ?? 49 ?? ?? ?? ?? ?? ?? C6 ?? ?? ?? 00 44 ?? ?? ?? 45 ?? ?? 48 ?? ?? ?? E8)
registerSymbol(pPesetasAob)
]])
unregisterSymbol("pPesetas")
registerSymbol("pPesetas", resolveAddress64(getAddress("pPesetasAob")), true)

autoAssemble([[
aobScanModule(pSpinelsAob,re4.exe,?? ?? ?? ?? 8B ?? ?? 49 ?? ?? ?? 48 ?? ?? 74 ?? 8B ?? ?? EB ?? B8 FF FF FF FF)
registerSymbol(pSpinelsAob)
]])
unregisterSymbol("pSpinels")
registerSymbol("pSpinels", resolveAddress64(getAddress("pSpinelsAob")), true)

{$asm}
aobScanModule(pPlayerAob,re4.exe,48 ?? ?? ?? ?? ?? ?? 83 ?? ?? ?? 0F 8E ?? ?? ?? ?? 83 ?? ?? ?? ?? ?? ?? 0F 84 ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 84 ?? 75)
registerSymbol(pPlayerAob)

aobScanModule(pMoverAob,re4.exe,75 ?? 8D ?? ?? 45 ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 33 ?? F3 0F 10 ?? ?? 4C ?? ?? ?? ?? F3 0F 10 ?? ?? 4C ?? ?? ?? ?? F3 0F 10 ?? ?? 48 ?? ?? 48 ?? ?? ?? ?? F3)
registerSymbol(pMoverAob)

alloc(pPlayerMem,1024,re4.exe)
label(pPlayerMemOriginal)
label(pPlayerMemReturn)
registerSymbol(pPlayerMemOriginal)

alloc(pMoverMem,1024,re4.exe)
label(pMoverMemOriginal)
label(pMoverMemEntry)
label(pMoverMemReturn)
registerSymbol(pMoverMemOriginal)

alloc(pPlayer,8,re4.exe)
registerSymbol(pPlayer)

pPlayer:
dq 0

alloc(pMover,8,re4.exe)
registerSymbol(pMover)

pMover:
dq 0

pPlayerMem:
pPlayerMemOriginal:
    readMem(pPlayerAob,7)
    mov [pPlayer],rax
    jmp pPlayerMemReturn

pPlayerAob:
    jmp pPlayerMem
    nop 2
pPlayerMemReturn:

alloc(pMover,8,re4.exe)
registerSymbol(pMover)

pMoverMem:
pMoverMemOriginal:
    readMem(pMoverAob+12,5)
    jmp pMoverMemReturn

pMoverMemEntry:
    mov [pMover],rcx
    jmp pMoverMemOriginal

pMoverAob+12:
    jmp pMoverMemEntry
pMoverMemReturn:

[disable]
pPlayerAob:
    readMem(pPlayerMemOriginal,7)

pMoverAob+12:
    readMem(pMoverMemOriginal,5)

{$lua}
unregisterSymbol("pPesetasAob")
unregisterSymbol("pPesetas")
unregisterSymbol("pSpinelsAob")
unregisterSymbol("pSpinels")
{$asm}
unregisterSymbol(pPlayerAob)
unregisterSymbol(pPlayerMemOriginal)
unregisterSymbol(pPlayer)
unregisterSymbol(pMoverAob)
unregisterSymbol(pMoverMemOriginal)
unregisterSymbol(pMover)
deAlloc(pPlayerMem)
deAlloc(pPlayer)
deAlloc(pMoverMem)
deAlloc(pMover)

luaCall(cycleFullCompact(nil,false))

// pPlayer
{
re4.exe+3223DF0 - 40 53                 - push rbx
re4.exe+3223DF2 - 56                    - push rsi
re4.exe+3223DF3 - 48 83 EC 48           - sub rsp,48
re4.exe+3223DF7 - 48 8B DA              - mov rbx,rdx
re4.exe+3223DFA - 0F29 74 24 30         - movaps [rsp+30],xmm6
re4.exe+3223DFF - 8B 52 14              - mov edx,[rdx+14]
re4.exe+3223E02 - 0F28 F2               - movaps xmm6,xmm2
re4.exe+3223E05 - 48 8B F1              - mov rsi,rcx
re4.exe+3223E08 - 85 D2                 - test edx,edx
re4.exe+3223E0A - 0F84 35040000         - je re4.exe+3224245
re4.exe+3223E10 - 48 89 6C 24 60        - mov [rsp+60],rbp
re4.exe+3223E15 - 48 89 7C 24 68        - mov [rsp+68],rdi
re4.exe+3223E1A - 4C 89 74 24 70        - mov [rsp+70],r14
re4.exe+3223E1F - 83 EA 01              - sub edx,01
re4.exe+3223E22 - 0F84 06010000         - je re4.exe+3223F2E
re4.exe+3223E28 - 83 EA 01              - sub edx,01
re4.exe+3223E2B - 0F85 D9000000         - jne re4.exe+3223F0A
re4.exe+3223E31 - 48 8B 53 28           - mov rdx,[rbx+28]
re4.exe+3223E35 - 45 33 C0              - xor r8d,r8d
re4.exe+3223E38 - E8 338F1900           - call re4.exe+33BCD70
re4.exe+3223E3D - 84 C0                 - test al,al
re4.exe+3223E3F - 0F85 E0000000         - jne re4.exe+3223F25
re4.exe+3223E45 - 83 7B 1C FF           - cmp dword ptr [rbx+1C],-01
re4.exe+3223E49 - 0F84 BB000000         - je re4.exe+3223F0A
re4.exe+3223E4F - 0F28 D6               - movaps xmm2,xmm6
re4.exe+3223E52 - 48 8B D3              - mov rdx,rbx
re4.exe+3223E55 - 48 8B CE              - mov rcx,rsi
re4.exe+3223E58 - E8 A3A00400           - call re4.exe+326DF00
re4.exe+3223E5D - 48 8B 4B 28           - mov rcx,[rbx+28]
re4.exe+3223E61 - F3 0F5A F6            - cvtss2sd xmm6,xmm6
&gt;&gt;&gt;
re4.exe+3223E65 - 48 8B 81 48010000     - mov rax,[rcx+00000148]
&gt;&gt;&gt;
re4.exe+3223E6C - 83 78 14 00           - cmp dword ptr [rax+14],00
re4.exe+3223E70 - 0F8E 89000000         - jng re4.exe+3223EFF
re4.exe+3223E76 - 83 B9 48020000 04     - cmp dword ptr [rcx+00000248],04
re4.exe+3223E7D - 0F84 7C000000         - je re4.exe+3223EFF
re4.exe+3223E83 - 48 8B 15 3EE2000A     - mov rdx,[re4.exe+D2320C8]
re4.exe+3223E8A - 48 8B CE              - mov rcx,rsi
re4.exe+3223E8D - E8 3E6939FF           - call re4.exe+25BA7D0
re4.exe+3223E92 - 84 C0                 - test al,al
re4.exe+3223E94 - 75 69                 - jne re4.exe+3223EFF
re4.exe+3223E96 - 48 8B 43 40           - mov rax,[rbx+40]
re4.exe+3223E9A - 33 ED                 - xor ebp,ebp
re4.exe+3223E9C - 4C 63 70 18           - movsxd  r14,dword ptr [rax+18]
re4.exe+3223EA0 - 4D 85 F6              - test r14,r14
re4.exe+3223EA3 - 7E 5A                 - jle re4.exe+3223EFF
re4.exe+3223EA5 - F2 0F5A F6            - cvtsd2ss xmm6,xmm6
}

// pMover
{
re4.exe+15D7741 - 48 8B 05 3085C30B     - mov rax,[re4.exe+D20FC78]
re4.exe+15D7748 - F3 0F5A C8            - cvtss2sd xmm1,xmm0
re4.exe+15D774C - F3 0F10 80 68030000   - movss xmm0,[rax+00000368]
re4.exe+15D7754 - 0F5A C0               - cvtps2pd xmm0,xmm0
re4.exe+15D7757 - F2 0F5E C8            - divsd xmm1,xmm0
re4.exe+15D775B - 66 0F5A F1            - cvtpd2ps xmm6,xmm1
re4.exe+15D775F - 0F84 2E010000         - je re4.exe+15D7893
re4.exe+15D7765 - 48 8B 46 10           - mov rax,[rsi+10]
re4.exe+15D7769 - 0F29 7C 24 70         - movaps [rsp+70],xmm7
re4.exe+15D776E - F3 0F10 BE F0010000   - movss xmm7,[rsi+000001F0]
re4.exe+15D7776 - 44 0F29 44 24 60      - movaps [rsp+60],xmm8
re4.exe+15D777C - F3 44 0F10 86 F4010000  - movss xmm8,[rsi+000001F4]
re4.exe+15D7785 - 44 0F29 4C 24 50      - movaps [rsp+50],xmm9
re4.exe+15D778B - F3 44 0F10 8E F8010000  - movss xmm9,[rsi+000001F8]
re4.exe+15D7794 - 48 85 C0              - test rax,rax
re4.exe+15D7797 - 75 10                 - jne re4.exe+15D77A9
re4.exe+15D7799 - 45 33 C0              - xor r8d,r8d
re4.exe+15D779C - 8D 50 46              - lea edx,[rax+46]
re4.exe+15D779F - 48 8B CF              - mov rcx,rdi
re4.exe+15D77A2 - E8 D924FC01           - call re4.exe+3599C80
re4.exe+15D77A7 - 33 C0                 - xor eax,eax
re4.exe+15D77A9 - 48 8B 48 20           - mov rcx,[rax+20]
re4.exe+15D77AD - 48 85 C9              - test rcx,rcx
re4.exe+15D77B0 - 75 10                 - jne re4.exe+15D77C2
re4.exe+15D77B2 - 8D 51 46              - lea edx,[rcx+46]
re4.exe+15D77B5 - 45 33 C0              - xor r8d,r8d
re4.exe+15D77B8 - 48 8B CF              - mov rcx,rdi
re4.exe+15D77BB - E8 C024FC01           - call re4.exe+3599C80
re4.exe+15D77C0 - 33 C9                 - xor ecx,ecx
&gt;&gt;&gt;
re4.exe+15D77C2 - F3 0F10 41 30         - movss xmm0,[rcx+30]
&gt;&gt;&gt;
re4.exe+15D77C7 - 4C 8D 4C 24 20        - lea r9,[rsp+20]
re4.exe+15D77CC - F3 0F10 49 34         - movss xmm1,[rcx+34]
re4.exe+15D77D1 - 4C 8D 44 24 30        - lea r8,[rsp+30]
re4.exe+15D77D6 - F3 0F10 51 38         - movss xmm2,[rcx+38]
re4.exe+15D77DB - 48 8B D7              - mov rdx,rdi
re4.exe+15D77DE - 48 8D 4C 24 40        - lea rcx,[rsp+40]
re4.exe+15D77E3 - F3 0F11 86 F0010000   - movss [rsi+000001F0],xmm0
re4.exe+15D77EB - F3 0F11 8E F4010000   - movss [rsi+000001F4],xmm1
re4.exe+15D77F3 - F3 0F11 96 F8010000   - movss [rsi+000001F8],xmm2
re4.exe+15D77FB - F3 0F11 44 24 30      - movss [rsp+30],xmm0
re4.exe+15D7801 - F3 0F11 4C 24 34      - movss [rsp+34],xmm1
re4.exe+15D7807 - F3 0F11 54 24 38      - movss [rsp+38],xmm2
re4.exe+15D780D - F3 0F11 7C 24 20      - movss [rsp+20],xmm7
re4.exe+15D7813 - F3 44 0F11 44 24 24   - movss [rsp+24],xmm8
re4.exe+15D781A - F3 44 0F11 4C 24 28   - movss [rsp+28],xmm9
re4.exe+15D7821 - E8 DA5ACFFF           - call re4.exe+12CD300
re4.exe+15D7826 - 44 0F28 4C 24 50      - movaps xmm9,[rsp+50]
re4.exe+15D782C - 44 0F28 44 24 60      - movaps xmm8,[rsp+60]
re4.exe+15D7832 - 0F28 7C 24 70         - movaps xmm7,[rsp+70]
re4.exe+15D7837 - F3 0F10 40 04         - movss xmm0,[rax+04]
re4.exe+15D783C - F3 0F10 10            - movss xmm2,[rax]
re4.exe+15D7840 - F3 0F10 48 08         - movss xmm1,[rax+08]
re4.exe+15D7845 - F3 0F59 D2            - mulss xmm2,xmm2
re4.exe+15D7849 - F3 0F59 C0            - mulss xmm0,xmm0
re4.exe+15D784D - F3 0F59 C9            - mulss xmm1,xmm1
re4.exe+15D7851 - F3 0F58 D0            - addss xmm2,xmm0
re4.exe+15D7855 - 0F57 C0               - xorps xmm0,xmm0
re4.exe+15D7858 - F3 0F58 D1            - addss xmm2,xmm1
re4.exe+15D785C - 0F2E C2               - ucomiss xmm0,xmm2
re4.exe+15D785F - 77 09                 - ja re4.exe+15D786A
re4.exe+15D7861 - 0F57 C0               - xorps xmm0,xmm0
re4.exe+15D7864 - F3 0F51 C2            - sqrtss xmm0,xmm2
re4.exe+15D7868 - EB 08                 - jmp re4.exe+15D7872
re4.exe+15D786A - 0F28 C2               - movaps xmm0,xmm2
re4.exe+15D786D - E8 B90AE305           - call re4.exe+740832B
re4.exe+15D7872 - 0F54 05 37F9FA05      - andps xmm0,[re4.exe+75871B0]
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>84</ID>
          <Description>"≡ vars"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>64</ID>
              <Description>"≡ player"</Description>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>98</ID>
                  <Description>"health"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"maxHealth"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"noHit"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"noDamage"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>19</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>105</ID>
                  <Description>"noDead"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>1A</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"autoHeal"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>1B</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"≡ mover"</Description>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"pos"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>12</ByteLength>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"x"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>68</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>65</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"y"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>38</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>87</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>83</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"z"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>34</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>109</ID>
                  <Description>"rotation"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>44</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>110</ID>
                  <Description>"scaleX"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>50</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>111</ID>
                  <Description>"scaleY"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>58</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>112</ID>
                  <Description>"scaleZ"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>pMover</Address>
                  <Offsets>
                    <Offset>54</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Increase Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>69</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Decrease Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>81</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"pesetas"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>pPesetas</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"spinels"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>pSpinels</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"≡ scripts"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>108</ID>
              <Description>"instakillEnemies"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Sets the health of every enemy to 1
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(enemyHealthAccessAob,re4.exe,44 ?? ?? ?? 0F 9E ?? 84 ?? 0F 84 ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? 74 ?? 4C ?? ?? ?? 74)
registerSymbol(enemyHealthAccessAob)

alloc(enemyHealthAccessMem,1024,re4.exe)
label(enemyHealthAccessMemOriginal)
label(enemyHealthAccessMemEntry)
label(enemyHealthAccessMemReturn)
registerSymbol(enemyHealthAccessMemOriginal)

enemyHealthAccessMem:
enemyHealthAccessMemOriginal:
    readMem(enemyHealthAccessAob,7)
    jmp enemyHealthAccessMemReturn

enemyHealthAccessMemEntry:
    cmp [rax+14],1
    jl enemyHealthAccessMemOriginal
    mov [rax+14],1
    jmp enemyHealthAccessMemOriginal

enemyHealthAccessAob:
    jmp enemyHealthAccessMemEntry
    nop 2
enemyHealthAccessMemReturn:

[disable]
enemyHealthAccessAob:
    readMem(enemyHealthAccessMemOriginal,7)

unregisterSymbol(enemyHealthAccessAob)
unregisterSymbol(enemyHealthAccessMemOriginal)
deAlloc(enemyHealthAccessMem)

{
re4.exe+2F69C2F - E8 1C0B6500           - call re4.exe+35BA750
re4.exe+2F69C34 - F3 0F10 44 24 34      - movss xmm0,[rsp+34]
re4.exe+2F69C3A - 0F5A C0               - cvtps2pd xmm0,xmm0
re4.exe+2F69C3D - F2 0F5C F0            - subsd xmm6,xmm0
re4.exe+2F69C41 - 66 0F5A C6            - cvtpd2ps xmm0,xmm6
re4.exe+2F69C45 - 0F28 74 24 50         - movaps xmm6,[rsp+50]
re4.exe+2F69C4A - F3 0F11 86 88020000   - movss [rsi+00000288],xmm0
re4.exe+2F69C52 - C6 83 58020000 01     - mov byte ptr [rbx+00000258],01
re4.exe+2F69C59 - C7 83 5C020000 0000803F - mov [rbx+0000025C],3F800000
re4.exe+2F69C63 - 48 8B 73 50           - mov rsi,[rbx+50]
re4.exe+2F69C67 - 48 85 F6              - test rsi,rsi
re4.exe+2F69C6A - 74 2C                 - je re4.exe+2F69C98
re4.exe+2F69C6C - 48 8B 06              - mov rax,[rsi]
re4.exe+2F69C6F - 48 8B 15 4216180A     - mov rdx,[re4.exe+D0EB2B8]
re4.exe+2F69C76 - 48 8B 08              - mov rcx,[rax]
re4.exe+2F69C79 - E8 82C16200           - call re4.exe+3595E00
re4.exe+2F69C7E - 84 C0                 - test al,al
re4.exe+2F69C80 - 74 16                 - je re4.exe+2F69C98
re4.exe+2F69C82 - 48 8B 06              - mov rax,[rsi]
re4.exe+2F69C85 - 48 8B 15 3416180A     - mov rdx,[re4.exe+D0EB2C0]
re4.exe+2F69C8C - 48 8B 08              - mov rcx,[rax]
re4.exe+2F69C8F - E8 6CC16200           - call re4.exe+3595E00
re4.exe+2F69C94 - 84 C0                 - test al,al
re4.exe+2F69C96 - 75 03                 - jne re4.exe+2F69C9B
re4.exe+2F69C98 - 49 8B F4              - mov rsi,r12
re4.exe+2F69C9B - 48 8B 86 48010000     - mov rax,[rsi+00000148]
re4.exe+2F69CA2 - 48 89 AC 24 B0000000  - mov [rsp+000000B0],rbp
re4.exe+2F69CAA - 44 38 60 18           - cmp [rax+18],r12l
re4.exe+2F69CAE - 0F85 35010000         - jne re4.exe+2F69DE9
&gt;&gt;&gt;
re4.exe+2F69CB4 - 44 39 60 14           - cmp [rax+14],r12d
re4.exe+2F69CB8 - 0F9E C0               - setle al
&gt;&gt;&gt;
re4.exe+2F69CBB - 84 C0                 - test al,al
re4.exe+2F69CBD - 0F84 26010000         - je re4.exe+2F69DE9
re4.exe+2F69CC3 - 48 8B 83 60010000     - mov rax,[rbx+00000160]
re4.exe+2F69CCA - 48 85 C0              - test rax,rax
re4.exe+2F69CCD - 74 0A                 - je re4.exe+2F69CD9
re4.exe+2F69CCF - 4C 39 60 10           - cmp [rax+10],r12
re4.exe+2F69CD3 - 74 04                 - je re4.exe+2F69CD9
re4.exe+2F69CD5 - 32 C0                 - xor al,al
re4.exe+2F69CD7 - EB 02                 - jmp re4.exe+2F69CDB
re4.exe+2F69CD9 - B0 01                 - mov al,01
re4.exe+2F69CDB - 0FB6 C0               - movzx eax,al
re4.exe+2F69CDE - 85 C0                 - test eax,eax
re4.exe+2F69CE0 - 0F85 BD020000         - jne re4.exe+2F69FA3
re4.exe+2F69CE6 - 48 8B 73 50           - mov rsi,[rbx+50]
re4.exe+2F69CEA - 48 85 F6              - test rsi,rsi
re4.exe+2F69CED - 74 2C                 - je re4.exe+2F69D1B
re4.exe+2F69CEF - 48 8B 06              - mov rax,[rsi]
re4.exe+2F69CF2 - 48 8B 15 BF15180A     - mov rdx,[re4.exe+D0EB2B8]
re4.exe+2F69CF9 - 48 8B 08              - mov rcx,[rax]
re4.exe+2F69CFC - E8 FFC06200           - call re4.exe+3595E00
re4.exe+2F69D01 - 84 C0                 - test al,al
re4.exe+2F69D03 - 74 16                 - je re4.exe+2F69D1B
re4.exe+2F69D05 - 48 8B 06              - mov rax,[rsi]
re4.exe+2F69D08 - 48 8B 15 B115180A     - mov rdx,[re4.exe+D0EB2C0]
re4.exe+2F69D0F - 48 8B 08              - mov rcx,[rax]
re4.exe+2F69D12 - E8 E9C06200           - call re4.exe+3595E00
}

{
re4.exe+23EABB3 - 0F9E C0               - setle al
re4.exe+23EABB6 - 84 C0                 - test al,al
re4.exe+23EABB8 - 75 5F                 - jne re4.exe+23EAC19
re4.exe+23EABBA - C6 42 1C 01           - mov byte ptr [rdx+1C],01
re4.exe+23EABBE - 41 8B C0              - mov eax,r8d
re4.exe+23EABC1 - 41 8B 49 14           - mov ecx,[r9+14]
re4.exe+23EABC5 - 99                    - cdq
re4.exe+23EABC6 - 33 C2                 - xor eax,edx
re4.exe+23EABC8 - C7 44 24 20 00000000  - mov [rsp+20],00000000
re4.exe+23EABD0 - 2B C2                 - sub eax,edx
re4.exe+23EABD2 - 48 8D 54 24 20        - lea rdx,[rsp+20]
re4.exe+23EABD7 - 2B C8                 - sub ecx,eax
re4.exe+23EABD9 - 48 8D 44 24 10        - lea rax,[rsp+10]
re4.exe+23EABDE - 85 C9                 - test ecx,ecx
re4.exe+23EABE0 - 89 4C 24 10           - mov [rsp+10],ecx
re4.exe+23EABE4 - 48 0F4E C2            - cmovle rax,rdx
&gt;&gt;&gt;
re4.exe+23EABE8 - 8B 08                 - mov ecx,[rax]
re4.exe+23EABEA - 41 89 49 14           - mov [r9+14],ecx
&gt;&gt;&gt;
re4.exe+23EABEE - 41 80 79 1A 00        - cmp byte ptr [r9+1A],00
re4.exe+23EABF3 - 74 0E                 - je re4.exe+23EAC03
re4.exe+23EABF5 - 85 C9                 - test ecx,ecx
re4.exe+23EABF7 - B8 01000000           - mov eax,00000001
re4.exe+23EABFC - 0F4E C8               - cmovle ecx,eax
re4.exe+23EABFF - 41 89 49 14           - mov [r9+14],ecx
re4.exe+23EAC03 - 41 80 79 1B 00        - cmp byte ptr [r9+1B],00
re4.exe+23EAC08 - 74 0F                 - je re4.exe+23EAC19
re4.exe+23EAC0A - 41 83 79 14 00        - cmp dword ptr [r9+14],00
re4.exe+23EAC0F - 7F 08                 - jg re4.exe+23EAC19
re4.exe+23EAC11 - 41 8B 41 10           - mov eax,[r9+10]
re4.exe+23EAC15 - 41 89 41 14           - mov [r9+14],eax
re4.exe+23EAC19 - C3                    - ret
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>113</ID>
              <Description>"≡ movementSpeedMultiplier"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Multiplies the player's and his ally's movement speed
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(posWriteAob,re4.exe,F3 0F 10 ?? ?? F3 0F 10 ?? ?? F3 0F 10 ?? ?? F3 0F 58 ?? F3 0F 58 ?? ?? F3 0F 58 ?? ?? F3 0F 11 ?? ?? F3 0F 11 ?? ?? F3 0F 11 ?? ?? EB)
registerSymbol(posWriteAob)

alloc(posWriteMem,1024,re4.exe)
label(posWriteMemOriginal)
label(posWriteMemEntry)
label(posWriteMemReturn)
registerSymbol(posWriteMemOriginal)

alloc(speedMultiplier,4,re4.exe)
registerSymbol(speedMultiplier)

speedMultiplier:
dd (float)1

posWriteMem:
posWriteMemOriginal:
    readMem(posWriteAob,15)
    jmp posWriteMemReturn

posWriteMemEntry:
    cmp [pMover],rbx
    jne posWriteMemOriginal
    movss xmm3,[speedMultiplier]
    movss xmm2,[rdi]
    //movss xmm1,[rdi+04]
    movss xmm0,[rdi+08]
    mulss xmm2,xmm3
    //mulss xmm1,xmm3
    mulss xmm0,xmm3
    movss [rdi],xmm2
    //movss [rdi+04],xmm1
    movss [rdi+08],xmm0
    jmp posWriteMemOriginal

posWriteAob:
    jmp posWriteMemEntry
    nop 3
    nop 3
    nop 3
    nop 1
posWriteMemReturn:

[disable]
posWriteAob:
    readMem(posWriteMemOriginal,15)

unregisterSymbol(posWriteAob)
unregisterSymbol(posWriteMemOriginal)
unregisterSymbol(speedMultiplier)
deAlloc(posWriteMem)
deAlloc(speedMultiplier)

{
re4.exe+12AAB1A5 - E8 81D195F4           - call re4.exe+740832B
re4.exe+12AAB1AA - F3 0F10 0D CEBBADF4   - movss xmm1,[re4.exe+7586D80]
re4.exe+12AAB1B2 - 4C 8B B4 24 98000000  - mov r14,[rsp+00000098]
re4.exe+12AAB1BA - F3 0F5E C8            - divss xmm1,xmm0
re4.exe+12AAB1BE - F3 0F59 F1            - mulss xmm6,xmm1
re4.exe+12AAB1C2 - F3 0F59 F9            - mulss xmm7,xmm1
re4.exe+12AAB1C6 - F3 44 0F59 C1         - mulss xmm8,xmm1
re4.exe+12AAB1CB - F3 44 0F59 C9         - mulss xmm9,xmm1
re4.exe+12AAB1D0 - F3 0F11 73 40         - movss [rbx+40],xmm6
re4.exe+12AAB1D5 - 0F28 74 24 70         - movaps xmm6,[rsp+70]
re4.exe+12AAB1DA - F3 0F11 7B 44         - movss [rbx+44],xmm7
re4.exe+12AAB1DF - 0F28 7C 24 60         - movaps xmm7,[rsp+60]
re4.exe+12AAB1E4 - F3 44 0F11 43 48      - movss [rbx+48],xmm8
re4.exe+12AAB1EA - 44 0F28 44 24 50      - movaps xmm8,[rsp+50]
re4.exe+12AAB1F0 - F3 44 0F11 4B 4C      - movss [rbx+4C],xmm9
re4.exe+12AAB1F6 - 44 0F28 4C 24 40      - movaps xmm9,[rsp+40]
re4.exe+12AAB1FC - E9 13FEFFFF           - jmp re4.exe+12AAB014
re4.exe+12AAB201 - F3 0F10 53 30         - movss xmm2,[rbx+30]
re4.exe+12AAB206 - F3 0F10 4B 34         - movss xmm1,[rbx+34]
re4.exe+12AAB20B - F3 0F10 43 38         - movss xmm0,[rbx+38]
&gt;&gt;&gt;
re4.exe+12AAB210 - F3 0F58 17            - addss xmm2,[rdi]
re4.exe+12AAB214 - F3 0F58 4F 04         - addss xmm1,[rdi+04]
re4.exe+12AAB219 - F3 0F58 47 08         - addss xmm0,[rdi+08]
&gt;&gt;&gt;
re4.exe+12AAB21E - F3 0F11 53 30         - movss [rbx+30],xmm2
re4.exe+12AAB223 - F3 0F11 4B 34         - movss [rbx+34],xmm1
re4.exe+12AAB228 - F3 0F11 43 38         - movss [rbx+38],xmm0
re4.exe+12AAB22D - EB 11                 - jmp re4.exe+12AAB240
re4.exe+12AAB22F - 8B 07                 - mov eax,[rdi]
re4.exe+12AAB231 - 89 43 30              - mov [rbx+30],eax
re4.exe+12AAB234 - 8B 47 04              - mov eax,[rdi+04]
re4.exe+12AAB237 - 89 43 34              - mov [rbx+34],eax
re4.exe+12AAB23A - 8B 47 08              - mov eax,[rdi+08]
re4.exe+12AAB23D - 89 43 38              - mov [rbx+38],eax
re4.exe+12AAB240 - 80 BB 01010000 00     - cmp byte ptr [rbx+00000101],00
re4.exe+12AAB247 - C6 83 00010000 01     - mov byte ptr [rbx+00000100],01
re4.exe+12AAB24E - 75 08                 - jne re4.exe+12AAB258
re4.exe+12AAB250 - 48 89 D9              - mov rcx,rbx
re4.exe+12AAB253 - E8 08E7B0F0           - call re4.exe+35B9960
re4.exe+12AAB258 - 8B 07                 - mov eax,[rdi]
re4.exe+12AAB25A - 4C 8D 9C 24 80000000  - lea r11,[rsp+00000080]
re4.exe+12AAB262 - 49 8B 5B 20           - mov rbx,[r11+20]
re4.exe+12AAB266 - 89 85 40020000        - mov [rbp+00000240],eax
re4.exe+12AAB26C - 8B 47 04              - mov eax,[rdi+04]
re4.exe+12AAB26F - 89 85 44020000        - mov [rbp+00000244],eax
re4.exe+12AAB275 - 8B 47 08              - mov eax,[rdi+08]
re4.exe+12AAB278 - 89 85 48020000        - mov [rbp+00000248],eax
re4.exe+12AAB27E - 49 8B 6B 28           - mov rbp,[r11+28]
re4.exe+12AAB282 - 4C 89 DC              - mov rsp,r11
re4.exe+12AAB285 - 5F                    - pop rdi
re4.exe+12AAB286 - C3                    - ret
}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>114</ID>
                  <Description>"speedMultiplier"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>speedMultiplier</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>0</ID>
              <Description>"alwaysFullMagazine"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
title:  Always full magazine
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(maxAmmoAob,re4.exe,7E ?? 48 ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 8B ?? 85 ?? 41 0F 48 ?? 4C ?? ?? ?? ?? 89 ?? ?? 48)
registerSymbol(maxAmmoAob)

alloc(maxAmmoMemOriginal,2,re4.exe)
registerSymbol(maxAmmoMemOriginal)

maxAmmoMemOriginal:
    readMem(maxAmmoAob,2)

maxAmmoAob:
    nop 2

[disable]
maxAmmoAob:
    readMem(maxAmmoMemOriginal,2)

unregisterSymbol(maxAmmoAob)
unregisterSymbol(maxAmmoMemOriginal)
deAlloc(maxAmmoMemOriginal)

{
re4.exe+1ACE5D0 - 48 89 6C 24 18        - mov [rsp+18],rbp
re4.exe+1ACE5D5 - 48 89 74 24 20        - mov [rsp+20],rsi
re4.exe+1ACE5DA - 57                    - push rdi
re4.exe+1ACE5DB - 48 83 EC 20           - sub rsp,20
re4.exe+1ACE5DF - 41 8B F0              - mov esi,r8d
re4.exe+1ACE5E2 - 48 8B FA              - mov rdi,rdx
re4.exe+1ACE5E5 - 48 8B E9              - mov rbp,rcx
re4.exe+1ACE5E8 - E8 53B9F8FF           - call re4.exe+1A59F40
re4.exe+1ACE5ED - 84 C0                 - test al,al
re4.exe+1ACE5EF - 75 5D                 - jne re4.exe+1ACE64E
re4.exe+1ACE5F1 - 85 F6                 - test esi,esi
re4.exe+1ACE5F3 - 78 59                 - js re4.exe+1ACE64E
re4.exe+1ACE5F5 - 48 89 5C 24 30        - mov [rsp+30],rbx
re4.exe+1ACE5FA - 4C 89 74 24 38        - mov [rsp+38],r14
re4.exe+1ACE5FF - 8B 47 48              - mov eax,[rdi+48]
re4.exe+1ACE602 - 45 33 F6              - xor r14d,r14d
re4.exe+1ACE605 - 8B 5F 44              - mov ebx,[rdi+44]
re4.exe+1ACE608 - 2B DE                 - sub ebx,esi
re4.exe+1ACE60A - 03 D8                 - add ebx,eax
re4.exe+1ACE60C - 85 C0                 - test eax,eax
re4.exe+1ACE60E - 7E 09                 - jle re4.exe+1ACE619
re4.exe+1ACE610 - 2B C6                 - sub eax,esi
re4.exe+1ACE612 - 41 0F48 C6            - cmovs eax,r14d
re4.exe+1ACE616 - 89 47 48              - mov [rdi+48],eax
re4.exe+1ACE619 - 4C 39 77 38           - cmp [rdi+38],r14
re4.exe+1ACE61D - 74 1C                 - je re4.exe+1ACE63B
re4.exe+1ACE61F - 48 8B D7              - mov rdx,rdi
re4.exe+1ACE622 - 48 8B CD              - mov rcx,rbp
re4.exe+1ACE625 - E8 26A8F8FF           - call re4.exe+1A58E50
re4.exe+1ACE62A - 3B D8                 - cmp ebx,eax
re4.exe+1ACE62C - 7E 0D                 - jle re4.exe+1ACE63B
re4.exe+1ACE62E - 48 8B D7              - mov rdx,rdi
re4.exe+1ACE631 - 48 8B CD              - mov rcx,rbp
re4.exe+1ACE634 - E8 17A8F8FF           - call re4.exe+1A58E50
re4.exe+1ACE639 - 8B D8                 - mov ebx,eax
re4.exe+1ACE63B - 85 DB                 - test ebx,ebx
re4.exe+1ACE63D - 41 0F48 DE            - cmovs ebx,r14d
re4.exe+1ACE641 - 4C 8B 74 24 38        - mov r14,[rsp+38]
re4.exe+1ACE646 - 89 5F 44              - mov [rdi+44],ebx
re4.exe+1ACE649 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+1ACE64E - 48 8B 6C 24 40        - mov rbp,[rsp+40]
re4.exe+1ACE653 - 48 8B 74 24 48        - mov rsi,[rsp+48]
re4.exe+1ACE658 - 48 83 C4 20           - add rsp,20
re4.exe+1ACE65C - 5F                    - pop rdi
re4.exe+1ACE65D - C3                    - ret
re4.exe+1ACE5D0 - 48 89 6C 24 18        - mov [rsp+18],rbp
re4.exe+1ACE5D5 - 48 89 74 24 20        - mov [rsp+20],rsi
re4.exe+1ACE5DA - 57                    - push rdi
re4.exe+1ACE5DB - 48 83 EC 20           - sub rsp,20
re4.exe+1ACE5DF - 41 8B F0              - mov esi,r8d
re4.exe+1ACE5E2 - 48 8B FA              - mov rdi,rdx
re4.exe+1ACE5E5 - 48 8B E9              - mov rbp,rcx
re4.exe+1ACE5E8 - E8 53B9F8FF           - call re4.exe+1A59F40
re4.exe+1ACE5ED - 84 C0                 - test al,al
re4.exe+1ACE5EF - 75 5D                 - jne re4.exe+1ACE64E
re4.exe+1ACE5F1 - 85 F6                 - test esi,esi
re4.exe+1ACE5F3 - 78 59                 - js re4.exe+1ACE64E
re4.exe+1ACE5F5 - 48 89 5C 24 30        - mov [rsp+30],rbx
re4.exe+1ACE5FA - 4C 89 74 24 38        - mov [rsp+38],r14
re4.exe+1ACE5FF - 8B 47 48              - mov eax,[rdi+48]
re4.exe+1ACE602 - 45 33 F6              - xor r14d,r14d
re4.exe+1ACE605 - 8B 5F 44              - mov ebx,[rdi+44]
re4.exe+1ACE608 - 2B DE                 - sub ebx,esi
re4.exe+1ACE60A - 03 D8                 - add ebx,eax
re4.exe+1ACE60C - 85 C0                 - test eax,eax
re4.exe+1ACE60E - 7E 09                 - jle re4.exe+1ACE619
re4.exe+1ACE610 - 2B C6                 - sub eax,esi
re4.exe+1ACE612 - 41 0F48 C6            - cmovs eax,r14d
re4.exe+1ACE616 - 89 47 48              - mov [rdi+48],eax
re4.exe+1ACE619 - 4C 39 77 38           - cmp [rdi+38],r14
re4.exe+1ACE61D - 74 1C                 - je re4.exe+1ACE63B
re4.exe+1ACE61F - 48 8B D7              - mov rdx,rdi
re4.exe+1ACE622 - 48 8B CD              - mov rcx,rbp
re4.exe+1ACE625 - E8 26A8F8FF           - call re4.exe+1A58E50
re4.exe+1ACE62A - 3B D8                 - cmp ebx,eax
&gt;&gt;&gt;
re4.exe+1ACE62C - 7E 0D                 - jle re4.exe+1ACE63B
&gt;&gt;&gt;
re4.exe+1ACE62E - 48 8B D7              - mov rdx,rdi
re4.exe+1ACE631 - 48 8B CD              - mov rcx,rbp
re4.exe+1ACE634 - E8 17A8F8FF           - call re4.exe+1A58E50
re4.exe+1ACE639 - 8B D8                 - mov ebx,eax
re4.exe+1ACE63B - 85 DB                 - test ebx,ebx
re4.exe+1ACE63D - 41 0F48 DE            - cmovs ebx,r14d
re4.exe+1ACE641 - 4C 8B 74 24 38        - mov r14,[rsp+38]
re4.exe+1ACE646 - 89 5F 44              - mov [rdi+44],ebx
re4.exe+1ACE649 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+1ACE64E - 48 8B 6C 24 40        - mov rbp,[rsp+40]
re4.exe+1ACE653 - 48 8B 74 24 48        - mov rsi,[rsp+48]
re4.exe+1ACE658 - 48 83 C4 20           - add rsp,20
re4.exe+1ACE65C - 5F                    - pop rdi
re4.exe+1ACE65D - C3                    - ret
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"preventItemConsumption"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
title:  Prevent item consumption
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(itemStackAob,re4.exe,48 ?? ?? ?? 48 ?? ?? 74 ?? 8B ?? ?? 44 ?? ?? 44 0F 4F ?? 33 ?? 45 ?? ?? 44 0F 48 ?? 44 ?? ?? ?? C3)
registerSymbol(itemStackAob)

alloc(itemStackMem,1024,re4.exe)
label(itemStackMemOriginal)
label(itemStackMemEntry)
label(itemStackMemExit)
label(itemStackMemReturn)
registerSymbol(itemStackMemOriginal)

itemStackMem:
itemStackMemOriginal:
    readMem(itemStackAob+18,8)

itemStackMemEntry:
    readMem(itemStackAob+18,4)
    cmp [rdx+34],r8d
    jge itemStackMemReturn
    jmp itemStackMemExit

itemStackMemExit:
    readMem(itemStackAob+1C,4)
    jmp itemStackMemReturn

itemStackAob+18:
    jmp itemStackMemEntry
    nop 3
itemStackMemReturn:

[disable]
itemStackAob+18:
    readMem(itemStackMemOriginal,8)

unregisterSymbol(itemStackAob)
unregisterSymbol(itemStackMemOriginal)
deAlloc(itemStackMem)

{
re4.exe+15F0C6F - C3                    - ret
re4.exe+15F0C70 - 48 8B 42 10           - mov rax,[rdx+10]
re4.exe+15F0C74 - 48 85 C0              - test rax,rax
re4.exe+15F0C77 - 74 0A                 - je re4.exe+15F0C83
re4.exe+15F0C79 - 8B 40 14              - mov eax,[rax+14]
re4.exe+15F0C7C - 44 3B C0              - cmp r8d,eax
re4.exe+15F0C7F - 44 0F4F C0            - cmovg r8d,eax
re4.exe+15F0C83 - 33 C0                 - xor eax,eax
re4.exe+15F0C85 - 45 85 C0              - test r8d,r8d
&gt;&gt;&gt;
re4.exe+15F0C88 - 44 0F48 C0            - cmovs r8d,eax
re4.exe+15F0C8C - 44 89 42 34           - mov [rdx+34],r8d
&gt;&gt;&gt;
re4.exe+15F0C90 - C3                    - ret
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"preventDurabilityLoss"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
title:  Prevent knife durability loss
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(itemDurabilityAob,re4.exe,E8 ?? ?? ?? ?? 89 ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? 5F C3 89 ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? 5F C3)
registerSymbol(itemDurabilityAob)

alloc(itemDurabilityMemOriginal,3,re4.exe)
registerSymbol(itemDurabilityMemOriginal)

itemDurabilityMemOriginal:
    readMem(itemDurabilityAob+18,3)

itemDurabilityAob+18:
    nop 3

[disable]
itemDurabilityAob+18:
    readMem(itemDurabilityMemOriginal,3)

unregisterSymbol(itemDurabilityAob)
unregisterSymbol(itemDurabilityMemOriginal)
deAlloc(itemDurabilityMemOriginal)

{
re4.exe+15F0260 - 48 89 5C 24 08        - mov [rsp+08],rbx
re4.exe+15F0265 - 48 89 74 24 10        - mov [rsp+10],rsi
re4.exe+15F026A - 57                    - push rdi
re4.exe+15F026B - 48 83 EC 20           - sub rsp,20
re4.exe+15F026F - 33 C0                 - xor eax,eax
re4.exe+15F0271 - 41 8B F8              - mov edi,r8d
re4.exe+15F0274 - 45 85 C0              - test r8d,r8d
re4.exe+15F0277 - 48 8B DA              - mov rbx,rdx
re4.exe+15F027A - 48 8B F1              - mov rsi,rcx
re4.exe+15F027D - 0F48 F8               - cmovs edi,eax
re4.exe+15F0280 - E8 AB18FCFF           - call re4.exe+15B1B30
re4.exe+15F0285 - 3B F8                 - cmp edi,eax
re4.exe+15F0287 - 7E 1E                 - jle re4.exe+15F02A7
re4.exe+15F0289 - 48 8B D3              - mov rdx,rbx
re4.exe+15F028C - 48 8B CE              - mov rcx,rsi
re4.exe+15F028F - E8 9C18FCFF           - call re4.exe+15B1B30
re4.exe+15F0294 - 89 43 30              - mov [rbx+30],eax
re4.exe+15F0297 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+15F029C - 48 8B 74 24 38        - mov rsi,[rsp+38]
re4.exe+15F02A1 - 48 83 C4 20           - add rsp,20
re4.exe+15F02A5 - 5F                    - pop rdi
re4.exe+15F02A6 - C3                    - ret
&gt;&gt;&gt;
re4.exe+15F02A7 - 89 7B 30              - mov [rbx+30],edi
&gt;&gt;&gt;
re4.exe+15F02AA - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+15F02AF - 48 8B 74 24 38        - mov rsi,[rsp+38]
re4.exe+15F02B4 - 48 83 C4 20           - add rsp,20
re4.exe+15F02B8 - 5F                    - pop rdi
re4.exe+15F02B9 - C3                    - ret
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"disableSaveCounter"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
title:  Disable save counter increase
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(saveCounterAob,re4.exe,01 ?? ?? 48 ?? ?? ?? ?? 8B ?? ?? 4C ?? ?? ?? ?? 8B ?? ?? ?? ?? ?? 3B)
registerSymbol(saveCounterAob)

alloc(saveCounterMemOriginal,3,re4.exe)
registerSymbol(saveCounterMemOriginal)

saveCounterMemOriginal:
    readMem(saveCounterAob,3)

saveCounterAob:
    nop 3

[disable]
saveCounterAob:
    readMem(saveCounterMemOriginal,3)

unregisterSymbol(saveCounterAob)
unregisterSymbol(saveCounterMemOriginal)
deAlloc(saveCounterMemOriginal)

{
re4.exe+29880F0 - 48 89 5C 24 08        - mov [rsp+08],rbx
re4.exe+29880F5 - 55                    - push rbp
re4.exe+29880F6 - 56                    - push rsi
re4.exe+29880F7 - 57                    - push rdi
re4.exe+29880F8 - 48 83 EC 30           - sub rsp,30
re4.exe+29880FC - 41 8B F9              - mov edi,r9d
re4.exe+29880FF - 48 8B DA              - mov rbx,rdx
re4.exe+2988102 - 48 8B 52 50           - mov rdx,[rdx+50]
re4.exe+2988106 - 4C 8D 4C 24 60        - lea r9,[rsp+60]
re4.exe+298810B - 41 8B F0              - mov esi,r8d
re4.exe+298810E - 48 8B E9              - mov rbp,rcx
re4.exe+2988111 - E8 EAD651FE           - call re4.exe+EA5800
re4.exe+2988116 - 48 8B 53 50           - mov rdx,[rbx+50]
re4.exe+298811A - 44 8B C6              - mov r8d,esi
re4.exe+298811D - C6 44 24 20 00        - mov byte ptr [rsp+20],00
re4.exe+2988122 - 48 8B CD              - mov rcx,rbp
re4.exe+2988125 - 84 C0                 - test al,al
re4.exe+2988127 - 75 05                 - jne re4.exe+298812E
re4.exe+2988129 - 44 8B CF              - mov r9d,edi
re4.exe+298812C - EB 08                 - jmp re4.exe+2988136
re4.exe+298812E - 44 8B 4C 24 60        - mov r9d,[rsp+60]
re4.exe+2988133 - 44 03 CF              - add r9d,edi
re4.exe+2988136 - E8 D5B64200           - call re4.exe+2DB3810
&gt;&gt;&gt;
re4.exe+298813B - 01 7B 4C              - add [rbx+4C],edi
&gt;&gt;&gt;
re4.exe+298813E - 48 8D 44 24 60        - lea rax,[rsp+60]
re4.exe+2988143 - 8B 53 4C              - mov edx,[rbx+4C]
re4.exe+2988146 - 4C 8D 44 24 68        - lea r8,[rsp+68]
re4.exe+298814B - 8B 0D B3698B0A        - mov ecx,[re4.exe+D23EB04]
re4.exe+2988151 - 3B D1                 - cmp edx,ecx
re4.exe+2988153 - 89 4C 24 68           - mov [rsp+68],ecx
re4.exe+2988157 - 49 0F4D C0            - cmovge rax,r8
re4.exe+298815B - 89 54 24 60           - mov [rsp+60],edx
re4.exe+298815F - 8B 00                 - mov eax,[rax]
re4.exe+2988161 - 89 43 4C              - mov [rbx+4C],eax
re4.exe+2988164 - 48 8B 5C 24 50        - mov rbx,[rsp+50]
re4.exe+2988169 - 48 83 C4 30           - add rsp,30
re4.exe+298816D - 5F                    - pop rdi
re4.exe+298816E - 5E                    - pop rsi
re4.exe+298816F - 5D                    - pop rbp
re4.exe+2988170 - C3                    - ret
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"≡ selectedItem"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Gets the item pointer of the currently selected item
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(pSelectedItemAob,re4.exe,8B ?? ?? 48 ?? ?? 74 ?? 8B ?? ?? 3B ?? 0F 4F ?? 33 ?? 85 ?? 0F 48)
registerSymbol(pSelectedItemAob)

aobScanModule(pSelectedItemCallbackAob,re4.exe,48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 57 48 ?? ?? ?? 48 ?? ?? 49 ?? ?? 49 ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 84 ?? 75 ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? 5F C3 8B ?? ?? 85 ?? 75 ?? EB ?? 48 ?? ?? ?? 45 ?? ?? 4C ?? ?? 89 ?? ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 83 ?? ?? 0F 95 ?? 48 ?? ?? ?? ?? 84 ?? 48 ?? ?? ?? ?? 0F 95 ?? 48 ?? ?? ?? 5F C3 CC CC 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 57 48 ?? ?? ?? 48 ?? ?? 45 ?? ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 4C ?? ?? 48 ?? ?? 48 ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? 5F C3)
registerSymbol(pSelectedItemCallbackAob)

alloc(pSelectedItemMem,1024,re4.exe)
label(pSelectedItemMemOriginal)
label(pSelectedItemMemEntry)
label(pSelectedItemMemReturn)
registerSymbol(pSelectedItemMemOriginal)

alloc(pSelectedItem,8,re4.exe)
registerSymbol(pSelectedItem)

pSelectedItem:
dq 0

pSelectedItemMem:
pSelectedItemMemOriginal:
    readMem(pSelectedItemAob,6)
    jmp pSelectedItemMemReturn

pSelectedItemMemEntry:
    cmp [rsp+28],pSelectedItemCallbackAob+A5
    jne pSelectedItemMemOriginal
    mov [pSelectedItem],rsi
    jmp pSelectedItemMemOriginal

pSelectedItemAob:
    jmp pSelectedItemMemEntry
    nop 1
pSelectedItemMemReturn:

[disable]
pSelectedItemAob:
    readMem(pSelectedItemMemOriginal,6)

unregisterSymbol(pSelectedItemAob)
unregisterSymbol(pSelectedItemCallbackAob)
unregisterSymbol(pSelectedItemMemOriginal)
unregisterSymbol(pSelectedItem)
deAlloc(pSelectedItemMem)
deAlloc(pSelectedItem)

{
re4.exe+156BABA - 8B 05 94D1CB0B        - mov eax,[re4.exe+D228C54]
re4.exe+156BAC0 - 89 43 30              - mov [rbx+30],eax
re4.exe+156BAC3 - C7 43 34 FFFFFFFF     - mov [rbx+34],FFFFFFFF
re4.exe+156BACA - 48 85 F6              - test rsi,rsi
re4.exe+156BACD - 74 78                 - je re4.exe+156BB47
re4.exe+156BACF - 0FB7 4E 1C            - movzx ecx,word ptr [rsi+1C]
re4.exe+156BAD3 - 0FB7 56 1E            - movzx edx,word ptr [rsi+1E]
re4.exe+156BAD7 - 4C 8B 46 20           - mov r8,[rsi+20]
re4.exe+156BADB - 8B 46 18              - mov eax,[rsi+18]
re4.exe+156BADE - 66 89 4B 1C           - mov [rbx+1C],cx
re4.exe+156BAE2 - 48 8B CD              - mov rcx,rbp
re4.exe+156BAE5 - 66 89 53 1E           - mov [rbx+1E],dx
re4.exe+156BAE9 - 48 8B D3              - mov rdx,rbx
re4.exe+156BAEC - 4C 89 43 20           - mov [rbx+20],r8
re4.exe+156BAF0 - 89 43 18              - mov [rbx+18],eax
re4.exe+156BAF3 - 44 8B 46 28           - mov r8d,[rsi+28]
re4.exe+156BAF7 - E8 A4510800           - call re4.exe+15F0CA0
re4.exe+156BAFC - 8B 46 2C              - mov eax,[rsi+2C]
re4.exe+156BAFF - 89 43 2C              - mov [rbx+2C],eax
re4.exe+156BB02 - 48 8B 43 10           - mov rax,[rbx+10]
&gt;&gt;&gt;
re4.exe+156BB06 - 8B 4E 34              - mov ecx,[rsi+34]
re4.exe+156BB09 - 48 85 C0              - test rax,rax
&gt;&gt;&gt;
re4.exe+156BB0C - 74 08                 - je re4.exe+156BB16
re4.exe+156BB0E - 8B 40 14              - mov eax,[rax+14]
re4.exe+156BB11 - 3B C8                 - cmp ecx,eax
re4.exe+156BB13 - 0F4F C8               - cmovg ecx,eax
re4.exe+156BB16 - 33 C0                 - xor eax,eax
re4.exe+156BB18 - 85 C9                 - test ecx,ecx
re4.exe+156BB1A - 0F48 C8               - cmovs ecx,eax
re4.exe+156BB1D - 89 4B 34              - mov [rbx+34],ecx
re4.exe+156BB20 - 8B 7E 30              - mov edi,[rsi+30]
re4.exe+156BB23 - 85 FF                 - test edi,edi
re4.exe+156BB25 - 0F48 F8               - cmovs edi,eax
re4.exe+156BB28 - 48 8B D3              - mov rdx,rbx
re4.exe+156BB2B - 48 8B CD              - mov rcx,rbp
re4.exe+156BB2E - E8 FD5F0400           - call re4.exe+15B1B30
re4.exe+156BB33 - 3B F8                 - cmp edi,eax
re4.exe+156BB35 - 7E 0D                 - jle re4.exe+156BB44
re4.exe+156BB37 - 48 8B D3              - mov rdx,rbx
re4.exe+156BB3A - 48 8B CD              - mov rcx,rbp
re4.exe+156BB3D - E8 EE5F0400           - call re4.exe+15B1B30
re4.exe+156BB42 - 8B F8                 - mov edi,eax
re4.exe+156BB44 - 89 7B 30              - mov [rbx+30],edi
re4.exe+156BB47 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+156BB4C - 48 8B 6C 24 38        - mov rbp,[rsp+38]
re4.exe+156BB51 - 48 8B 74 24 40        - mov rsi,[rsp+40]
re4.exe+156BB56 - 48 83 C4 20           - add rsp,20
re4.exe+156BB5A - 5F                    - pop rdi
re4.exe+156BB5B - C3                    - ret
}

{
re4.exe+6AD870 - 48 89 5C 24 08        - mov [rsp+08],rbx
re4.exe+6AD875 - 48 89 74 24 10        - mov [rsp+10],rsi
re4.exe+6AD87A - 57                    - push rdi
re4.exe+6AD87B - 48 83 EC 30           - sub rsp,30
re4.exe+6AD87F - 48 8B DA              - mov rbx,rdx
re4.exe+6AD882 - 49 8B F8              - mov rdi,r8
re4.exe+6AD885 - 49 8B D0              - mov rdx,r8
re4.exe+6AD888 - 48 8B F1              - mov rsi,rcx
re4.exe+6AD88B - E8 A019CD00           - call re4.exe+137F230
re4.exe+6AD890 - 84 C0                 - test al,al
re4.exe+6AD892 - 75 10                 - jne re4.exe+6AD8A4
re4.exe+6AD894 - 48 8B 5C 24 40        - mov rbx,[rsp+40]
re4.exe+6AD899 - 48 8B 74 24 48        - mov rsi,[rsp+48]
re4.exe+6AD89E - 48 83 C4 30           - add rsp,30
re4.exe+6AD8A2 - 5F                    - pop rdi
re4.exe+6AD8A3 - C3                    - ret
re4.exe+6AD8A4 - 8B 43 18              - mov eax,[rbx+18]
re4.exe+6AD8A7 - 85 C0                 - test eax,eax
re4.exe+6AD8A9 - 75 02                 - jne re4.exe+6AD8AD
re4.exe+6AD8AB - EB 1C                 - jmp re4.exe+6AD8C9
re4.exe+6AD8AD - 48 8B 53 10           - mov rdx,[rbx+10]
re4.exe+6AD8B1 - 45 33 C9              - xor r9d,r9d
re4.exe+6AD8B4 - 4C 8B C7              - mov r8,rdi
re4.exe+6AD8B7 - 89 44 24 20           - mov [rsp+20],eax
re4.exe+6AD8BB - 48 8B CE              - mov rcx,rsi
re4.exe+6AD8BE - E8 1D020702           - call re4.exe+271DAE0
re4.exe+6AD8C3 - 83 F8 FF              - cmp eax,-01
re4.exe+6AD8C6 - 0F95 C0               - setne al
re4.exe+6AD8C9 - 48 8B 5C 24 40        - mov rbx,[rsp+40]
re4.exe+6AD8CE - 84 C0                 - test al,al
re4.exe+6AD8D0 - 48 8B 74 24 48        - mov rsi,[rsp+48]
re4.exe+6AD8D5 - 0F95 C0               - setne al
re4.exe+6AD8D8 - 48 83 C4 30           - add rsp,30
re4.exe+6AD8DC - 5F                    - pop rdi
re4.exe+6AD8DD - C3                    - ret
re4.exe+6AD8DE - CC                    - int 3
re4.exe+6AD8DF - CC                    - int 3
re4.exe+6AD8E0 - 48 89 5C 24 08        - mov [rsp+08],rbx
re4.exe+6AD8E5 - 48 89 74 24 10        - mov [rsp+10],rsi
re4.exe+6AD8EA - 57                    - push rdi
re4.exe+6AD8EB - 48 83 EC 20           - sub rsp,20
re4.exe+6AD8EF - 48 8B FA              - mov rdi,rdx
re4.exe+6AD8F2 - 45 33 C0              - xor r8d,r8d
re4.exe+6AD8F5 - 48 8B 15 6474A40C     - mov rdx,[re4.exe+D0F4D60]
re4.exe+6AD8FC - 48 8B F1              - mov rsi,rcx
re4.exe+6AD8FF - E8 9C11EE02           - call re4.exe+358EAA0
re4.exe+6AD904 - 4C 8B C7              - mov r8,rdi
re4.exe+6AD907 - 48 8B D0              - mov rdx,rax
re4.exe+6AD90A - 48 8B CE              - mov rcx,rsi
re4.exe+6AD90D - 48 8B D8              - mov rbx,rax
re4.exe+6AD910 - E8 EBE0EB00           - call re4.exe+156BA00
&gt;&gt;&gt;
re4.exe+6AD915 - 48 8B 74 24 38        - mov rsi,[rsp+38]
&gt;&gt;&gt;
re4.exe+6AD91A - 48 8B C3              - mov rax,rbx
re4.exe+6AD91D - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+6AD922 - 48 83 C4 20           - add rsp,20
re4.exe+6AD926 - 5F                    - pop rdi
re4.exe+6AD927 - C3                    - ret
}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>95</ID>
                  <Description>"quantity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSelectedItem</Address>
                  <Offsets>
                    <Offset>34</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>100</ID>
              <Description>"≡ completionPoints"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Gets the pointer for completion points
author: DRKDST
game:   re4.exe@1.0.0
}

[enable]
aobScanModule(pCompletionPointsAob,re4.exe,E8 ?? ?? ?? ?? 8B ?? ?? ?? ?? ?? 80 ?? ?? ?? ?? 74 ?? 48 ?? ?? 48 ?? ?? E8 ?? ?? ?? ?? 8B ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? ?? 48 ?? ?? ?? 5F C3)
registerSymbol(pCompletionPointsAob)

alloc(pCompletionPointsMem,1024,re4.exe)
label(pCompletionPointsMemOriginal)
label(pCompletionPointsMemEntry)
label(pCompletionPointsMemReturn)
registerSymbol(pCompletionPointsMemOriginal)

alloc(pCompletionPoints,8,re4.exe)
registerSymbol(pCompletionPoints)

pCompletionPoints:
dq 0

pCompletionPointsMem:
pCompletionPointsMemOriginal:
    readMem(pCompletionPointsAob+5,6)
    jmp pCompletionPointsMemReturn

pCompletionPointsMemEntry:
    mov [pCompletionPoints],rbx
    jmp pCompletionPointsMemOriginal

pCompletionPointsAob+5:
    jmp pCompletionPointsMemEntry
    nop 1
pCompletionPointsMemReturn:

[disable]
pCompletionPointsAob+5:
    readMem(pCompletionPointsMemOriginal,6)

unregisterSymbol(pCompletionPointsAob)
unregisterSymbol(pCompletionPointsMemOriginal)
unregisterSymbol(pCompletionPoints)
deAlloc(pCompletionPointsMem)
deAlloc(pCompletionPoints)

{
re4.exe+141EFE0 - 48 89 5C 24 08        - mov [rsp+08],rbx
re4.exe+141EFE5 - 48 89 74 24 18        - mov [rsp+18],rsi
re4.exe+141EFEA - 57                    - push rdi
re4.exe+141EFEB - 48 83 EC 20           - sub rsp,20
re4.exe+141EFEF - 48 8B 72 78           - mov rsi,[rdx+78]
re4.exe+141EFF3 - 4C 8D 44 24 38        - lea r8,[rsp+38]
re4.exe+141EFF8 - 48 8B DA              - mov rbx,rdx
re4.exe+141EFFB - C6 44 24 38 00        - mov byte ptr [rsp+38],00
re4.exe+141F000 - 48 8B D6              - mov rdx,rsi
re4.exe+141F003 - 48 8B F9              - mov rdi,rcx
re4.exe+141F006 - E8 D5CF2102           - call re4.exe+363BFE0
&gt;&gt;&gt;
re4.exe+141F00B - 8B 9B A0000000        - mov ebx,[rbx+000000A0]
&gt;&gt;&gt;
re4.exe+141F011 - 80 7C 24 38 00        - cmp byte ptr [rsp+38],00
re4.exe+141F016 - 74 0B                 - je re4.exe+141F023
re4.exe+141F018 - 48 8B D6              - mov rdx,rsi
re4.exe+141F01B - 48 8B CF              - mov rcx,rdi
re4.exe+141F01E - E8 EDCF2102           - call re4.exe+363C010
re4.exe+141F023 - 8B C3                 - mov eax,ebx
re4.exe+141F025 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
re4.exe+141F02A - 48 8B 74 24 40        - mov rsi,[rsp+40]
re4.exe+141F02F - 48 83 C4 20           - add rsp,20
re4.exe+141F033 - 5F                    - pop rdi
re4.exe+141F034 - C3                    - ret
}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>101</ID>
                  <Description>"currentCP"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pCompletionPoints</Address>
                  <Offsets>
                    <Offset>A0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>121</ID>
              <Description>"alwaysMaxMayhemCharges"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Max mayhem charges are always available
author: DRKDST
game:   re4.exe@1.0.1
}

[enable]
aobScanModule(mayhemChargesAob,re4.exe,39 ?? ?? 44 ?? ?? ?? ?? ?? ?? 0F 94 ?? 85 ?? 0F 95 ?? 88 ?? ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? 80 ?? ?? ?? 75)
registerSymbol(mayhemChargesAob)

alloc(mayhemChargesMem,1024,re4.exe)
label(mayhemChargesMemOriginal)
label(mayhemChargesMemEntry)
label(mayhemChargesMemReturn)
registerSymbol(mayhemChargesMemOriginal)

mayhemChargesMem:
mayhemChargesMemOriginal:
    readMem(mayhemChargesAob,10)
    jmp mayhemChargesMemReturn

mayhemChargesMemEntry:
    test rdx,rdx
    je mayhemChargesMemOriginal
    mov [rdx+18],2
    jmp mayhemChargesMemOriginal

mayhemChargesAob:
    jmp mayhemChargesMemEntry
    nop 3
    nop 2
mayhemChargesMemReturn:

[disable]
mayhemChargesAob:
    readMem(mayhemChargesMemOriginal,10)

unregisterSymbol(mayhemChargesAob)
unregisterSymbol(mayhemChargesMemOriginal)
deAlloc(mayhemChargesMem)

{
re4.exe+313D039 - 48 83 7B 10 00        - cmp qword ptr [rbx+10],00
re4.exe+313D03E - 74 04                 - je re4.exe+313D044
re4.exe+313D040 - 32 C0                 - xor al,al
re4.exe+313D042 - EB 02                 - jmp re4.exe+313D046
re4.exe+313D044 - B0 01                 - mov al,01
re4.exe+313D046 - 0FB6 C0               - movzx eax,al
re4.exe+313D049 - 85 C0                 - test eax,eax
re4.exe+313D04B - 0F85 1A010000         - jne re4.exe+313D16B
re4.exe+313D051 - 48 8B 97 00010000     - mov rdx,[rdi+00000100]
re4.exe+313D058 - 48 85 D2              - test rdx,rdx
re4.exe+313D05B - 75 05                 - jne re4.exe+313D062
re4.exe+313D05D - 45 33 C0              - xor r8d,r8d
re4.exe+313D060 - EB 04                 - jmp re4.exe+313D066
re4.exe+313D062 - 44 8B 42 1C           - mov r8d,[rdx+1C]
re4.exe+313D066 - 8B 42 38              - mov eax,[rdx+38]
re4.exe+313D069 - 33 C9                 - xor ecx,ecx
&gt;&gt;&gt;
re4.exe+313D06B - 39 42 18              - cmp [rdx+18],eax
re4.exe+313D06E - 44 89 83 88050000     - mov [rbx+00000588],r8d
&gt;&gt;&gt;
re4.exe+313D075 - 0F94 C1               - sete cl
re4.exe+313D078 - 85 C9                 - test ecx,ecx
re4.exe+313D07A - 0F95 C0               - setne al
re4.exe+313D07D - 88 83 8C050000        - mov [rbx+0000058C],al
re4.exe+313D083 - 48 8B 87 00010000     - mov rax,[rdi+00000100]
re4.exe+313D08A - 80 78 10 00           - cmp byte ptr [rax+10],00
re4.exe+313D08E - 75 1B                 - jne re4.exe+313D0AB
re4.exe+313D090 - 83 78 18 01           - cmp dword ptr [rax+18],01
re4.exe+313D094 - 0F9D C0               - setge al
re4.exe+313D097 - 84 C0                 - test al,al
re4.exe+313D099 - 74 10                 - je re4.exe+313D0AB
re4.exe+313D09B - 40 84 ED              - test bpl,bpl
re4.exe+313D09E - 75 0B                 - jne re4.exe+313D0AB
re4.exe+313D0A0 - 48 8B D3              - mov rdx,rbx
re4.exe+313D0A3 - 48 8B CE              - mov rcx,rsi
re4.exe+313D0A6 - E8 45344DFE           - call re4.exe+16104F0
re4.exe+313D0AB - 83 BB 58050000 03     - cmp dword ptr [rbx+00000558],03
re4.exe+313D0B2 - 75 35                 - jne re4.exe+313D0E9
re4.exe+313D0B4 - C7 83 58050000 04000000 - mov [rbx+00000558],00000004
re4.exe+313D0BE - 48 8B 97 00010000     - mov rdx,[rdi+00000100]
re4.exe+313D0C5 - 48 85 D2              - test rdx,rdx
re4.exe+313D0C8 - 74 08                 - je re4.exe+313D0D2
re4.exe+313D0CA - 48 8B CE              - mov rcx,rsi
re4.exe+313D0CD - E8 6E9F7EFE           - call re4.exe+1927040
re4.exe+313D0D2 - 48 8B 87 00010000     - mov rax,[rdi+00000100]
re4.exe+313D0D9 - 48 85 C0              - test rax,rax
re4.exe+313D0DC - 75 02                 - jne re4.exe+313D0E0
re4.exe+313D0DE - EB 03                 - jmp re4.exe+313D0E3
re4.exe+313D0E0 - 8B 40 1C              - mov eax,[rax+1C]
re4.exe+313D0E3 - 89 87 60010000        - mov [rdi+00000160],eax
re4.exe+313D0E9 - 48 8B 87 00010000     - mov rax,[rdi+00000100]
re4.exe+313D0F0 - 80 78 10 00           - cmp byte ptr [rax+10],00

}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>118</ID>
              <Description>"alwaysMaxMayhemDuration"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
desc:   Locks the remaining duration of mayhem to it's maximum
author: DRKDST
game:   re4.exe@1.0.1
}

[enable]
aobScanModule(mayhamDurationAob,re4.exe,F3 0F 11 ?? ?? 0F 87 ?? ?? ?? ?? 40 ?? ?? ?? 75 ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? ?? 48 ?? ?? 74 ?? 8B ?? ?? 85 ?? 74)
registerSymbol(mayhamDurationAob)

alloc(mayhamDurationMem,1024,re4.exe)
label(mayhamDurationMemOriginal)
label(mayhamDurationMemEntry)
label(mayhamDurationMemReturn)
registerSymbol(mayhamDurationMemOriginal)

mayhamDurationMem:
mayhamDurationMemOriginal:
    readMem(mayhamDurationAob,5)
    jmp mayhamDurationMemReturn

mayhamDurationMemEntry:
    movss xmm2,[rbx+20]
    jmp mayhamDurationMemOriginal

mayhamDurationAob:
    jmp mayhamDurationMemEntry
mayhamDurationMemReturn:

[disable]
mayhamDurationAob:
    readMem(mayhamDurationMemOriginal,5)

unregisterSymbol(mayhamDurationAob)
unregisterSymbol(mayhamDurationMemOriginal)
deAlloc(mayhamDurationMem)

{
re4.exe+192D45E - E8 ADA1D101           - call re4.exe+3647610
re4.exe+192D463 - 85 C0                 - test eax,eax
re4.exe+192D465 - 7E 03                 - jle re4.exe+192D46A
re4.exe+192D467 - 03 7B 40              - add edi,[rbx+40]
re4.exe+192D46A - 8B 43 18              - mov eax,[rbx+18]
re4.exe+192D46D - 8B 53 38              - mov edx,[rbx+38]
re4.exe+192D470 - 3B C2                 - cmp eax,edx
re4.exe+192D472 - 0F84 26010000         - je re4.exe+192D59E
re4.exe+192D478 - 85 FF                 - test edi,edi
re4.exe+192D47A - 0F8E 1E010000         - jng re4.exe+192D59E
re4.exe+192D480 - 01 7B 14              - add [rbx+14],edi
re4.exe+192D483 - 8B 4B 14              - mov ecx,[rbx+14]
re4.exe+192D486 - 44 8B 43 34           - mov r8d,[rbx+34]
re4.exe+192D48A - 41 3B C8              - cmp ecx,r8d
re4.exe+192D48D - 0F8C 0B010000         - jl re4.exe+192D59E
re4.exe+192D493 - FF C0                 - inc eax
re4.exe+192D495 - 41 2B C8              - sub ecx,r8d
re4.exe+192D498 - 89 43 18              - mov [rbx+18],eax
re4.exe+192D49B - 89 4B 14              - mov [rbx+14],ecx
re4.exe+192D49E - 3B D0                 - cmp edx,eax
re4.exe+192D4A0 - 0F8F F8000000         - jg re4.exe+192D59E
re4.exe+192D4A6 - 89 53 18              - mov [rbx+18],edx
re4.exe+192D4A9 - 89 6B 14              - mov [rbx+14],ebp
re4.exe+192D4AC - E9 ED000000           - jmp re4.exe+192D59E
re4.exe+192D4B1 - 48 83 C2 2C           - add rdx,2C
re4.exe+192D4B5 - 45 33 C0              - xor r8d,r8d
re4.exe+192D4B8 - E8 53A1D101           - call re4.exe+3647610
re4.exe+192D4BD - F3 0F10 5B 20         - movss xmm3,[rbx+20]
re4.exe+192D4C2 - 0F57 C0               - xorps xmm0,xmm0
re4.exe+192D4C5 - F3 0F10 53 3C         - movss xmm2,[rbx+3C]
re4.exe+192D4CA - 0F5A D2               - cvtps2pd xmm2,xmm2
re4.exe+192D4CD - F3 0F2A C0            - cvtsi2ss xmm0,eax
re4.exe+192D4D1 - 0F5A DB               - cvtps2pd xmm3,xmm3
re4.exe+192D4D4 - 0F5A C8               - cvtps2pd xmm1,xmm0
re4.exe+192D4D7 - 0F57 C0               - xorps xmm0,xmm0
re4.exe+192D4DA - F2 0F59 D1            - mulsd xmm2,xmm1
re4.exe+192D4DE - F3 0F5A C6            - cvtss2sd xmm0,xmm6
re4.exe+192D4E2 - F2 0F58 D0            - addsd xmm2,xmm0
re4.exe+192D4E6 - 66 0F5A C2            - cvtpd2ps xmm0,xmm2
re4.exe+192D4EA - 0F5A C8               - cvtps2pd xmm1,xmm0
re4.exe+192D4ED - 0F57 C0               - xorps xmm0,xmm0
re4.exe+192D4F0 - F2 0F5C D9            - subsd xmm3,xmm1
re4.exe+192D4F4 - 66 0F5A D3            - cvtpd2ps xmm2,xmm3
re4.exe+192D4F8 - 0F2F D0               - comiss xmm2,xmm0
&gt;&gt;&gt;
re4.exe+192D4FB - F3 0F11 53 20         - movss [rbx+20],xmm2
&gt;&gt;&gt;
re4.exe+192D500 - 0F87 98000000         - ja re4.exe+192D59E
re4.exe+192D506 - 40 38 6B 60           - cmp [rbx+60],bpl
re4.exe+192D50A - 75 45                 - jne re4.exe+192D551
re4.exe+192D50C - 48 8B 05 856E910B     - mov rax,[re4.exe+D244398]
re4.exe+192D513 - 48 8B 78 40           - mov rdi,[rax+40]
re4.exe+192D517 - 48 85 FF              - test rdi,rdi
re4.exe+192D51A - 74 31                 - je re4.exe+192D54D
re4.exe+192D51C - 8B 47 10              - mov eax,[rdi+10]
re4.exe+192D51F - 85 C0                 - test eax,eax
re4.exe+192D521 - 74 2A                 - je re4.exe+192D54D
re4.exe+192D523 - 48 83 C7 18           - add rdi,18
re4.exe+192D527 - 8B E8                 - mov ebp,eax
re4.exe+192D529 - 0F1F 80 00000000      - nop dword ptr [rax+00000000]
re4.exe+192D530 - 48 8B 17              - mov rdx,[rdi]
re4.exe+192D533 - 48 8B CE              - mov rcx,rsi
re4.exe+192D536 - 48 85 D2              - test rdx,rdx
re4.exe+192D539 - 74 05                 - je re4.exe+192D540
re4.exe+192D53B - FF 57 08              - call qword ptr [rdi+08]
re4.exe+192D53E - EB 03                 - jmp re4.exe+192D543
re4.exe+192D540 - FF 57 08              - call qword ptr [rdi+08]
re4.exe+192D543 - 48 83 C7 18           - add rdi,18
re4.exe+192D547 - 48 83 ED 01           - sub rbp,01
re4.exe+192D54B - 75 E3                 - jne re4.exe+192D530
re4.exe+192D54D - C6 43 60 01           - mov byte ptr [rbx+60],01
re4.exe+192D551 - 48 8B 05 406E910B     - mov rax,[re4.exe+D244398]
}

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>

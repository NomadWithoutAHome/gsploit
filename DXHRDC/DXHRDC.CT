<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"[Player]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
aobscanmodule(healthAOB, DXHRDC.exe, 33 FF 3B 73 30 75)
registersymbol(healthAOB)
aobscanmodule(updateAOB, DXHRDC.exe, 8B 7C 24 14 D9 6C 24 6C)
registersymbol(updateAOB)

alloc(healthCave, 64, DXHRDC.exe)
label(healthRet)
alloc(updateCave, 64, DXHRDC.exe)
label(updateRet)

alloc(plrHealthPtr, 4, DXHRDC.exe)
registersymbol(plrHealthPtr)
alloc(plrUpdatePtr, 4, DXHRDC.exe)
registersymbol(plrUpdatePtr)

plrHealthPtr:
dd 0

plrUpdatePtr:
dd 0

healthCave:
mov [plrHealthPtr],ebx
xor edi,edi
cmp esi,[ebx+30]
jmp healthRet

updateCave:
mov [plrUpdatePtr],esi
mov edi,[esp+14]
fldcw [esp+6C]
jmp updateRet

healthAOB:
jmp healthCave
healthRet:

updateAOB:
jmp updateCave
db 90 90 90
updateRet:

[disable]
healthAOB:
db 33 FF 3B 73 30

updateAOB:
db 8B 7C 24 14 D9 6C 24 6C

dealloc(healthCave)
dealloc(updateCave)
dealloc(plrHealthPtr)
dealloc(plrUpdatePtr)
unregistersymbol(plrHealthPtr)
unregistersymbol(plrUpdatePtr)
unregistersymbol(healthAOB)
unregistersymbol(updateAOB)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Health"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>plrHealthPtr</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Battery 1 Charge"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>plrUpdatePtr</Address>
          <Offsets>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
